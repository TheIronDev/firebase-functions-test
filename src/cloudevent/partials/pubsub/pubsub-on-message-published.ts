import {DeepPartial, MockCloudEventPartials} from '../../types';
import {CloudEvent, CloudFunction, pubsub} from 'firebase-functions/v2';
import {getEventFilters, getEventType, PROJECT_ID} from '../helpers';

export const pubsubOnMessagePublished:
  MockCloudEventPartials<pubsub.MessagePublishedData> = {
  generatePartial(
    cloudFunction: CloudFunction<pubsub.MessagePublishedData>): DeepPartial<CloudEvent<pubsub.MessagePublishedData>> {
    const topicId = getEventFilters(cloudFunction)?.topic || '';
    const source = `//pubsub.googleapis.com/projects/${PROJECT_ID}/topics/${topicId}`;
    const subscription = `projects/${PROJECT_ID}/subscriptions/pubsubexample-1`;

    const dataMessageJson = '{"hello": "world"}';

    /**
     *  Node: The following is a Base64 string generated by the following:
     *  Buffer.from(dataMessageJson).toString('base64')
     */
    const dataMessageData = 'eyJoZWxsbyI6IndvcmxkIn0=';

    return {
      source,
      type: getEventType(cloudFunction),
      data: {
        message: {
          attributes: {'sample-attribute': 'I am an attribute'},
          data: dataMessageData, // Buffer base64 encoded
          json: dataMessageJson,
          messageId: 'messageId',
          publishTime: new Date().toISOString(),
        },
        subscription,
      },
    };
  },
  match(cloudFunction: CloudFunction<unknown>): boolean {
    return getEventType(cloudFunction) === 'google.cloud.pubsub.topic.v1.messagePublished';
  },
};
